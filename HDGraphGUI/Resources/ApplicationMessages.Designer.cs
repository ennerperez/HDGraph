//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HDGraph.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ApplicationMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ApplicationMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HDGraph.Resources.ApplicationMessages", typeof(ApplicationMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GB.
        /// </summary>
        internal static string abreviationGOctet {
            get {
                return ResourceManager.GetString("abreviationGOctet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KB.
        /// </summary>
        internal static string abreviationKOctet {
            get {
                return ResourceManager.GetString("abreviationKOctet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MB.
        /// </summary>
        internal static string abreviationMOctet {
            get {
                return ResourceManager.GetString("abreviationMOctet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to B..
        /// </summary>
        internal static string abreviationOctet {
            get {
                return ResourceManager.GetString("abreviationOctet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TB.
        /// </summary>
        internal static string abreviationTOctet {
            get {
                return ResourceManager.GetString("abreviationTOctet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All files.
        /// </summary>
        internal static string AllFiles {
            get {
                return ResourceManager.GetString("AllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An application restart is required to apply the new langage. Are you sure ?.
        /// </summary>
        internal static string AppRestartRequiredToApplyLangage {
            get {
                return ResourceManager.GetString("AppRestartRequiredToApplyLangage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must restart HDGraph before the new setting will take effect. Do you want to restart HDGraph now?.
        /// </summary>
        internal static string AppRestartRequiredToApplySetting {
            get {
                return ResourceManager.GetString("AppRestartRequiredToApplySetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose your draw engine here..
        /// </summary>
        internal static string ChooseDrawEngineHere {
            get {
                return ResourceManager.GetString("ChooseDrawEngineHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A critical error occured. Error is logged, and application will stop. Please send the application log ({0}) to the HDGraph team (contact: http://hdgraph.sourceforge.net). Thank you. .
        /// </summary>
        internal static string CriticalError {
            get {
                return ResourceManager.GetString("CriticalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pointed directory : {0}.
        /// </summary>
        internal static string CursorHoverDirectory {
            get {
                return ResourceManager.GetString("CursorHoverDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your cursor is over the part representing the disk free space..
        /// </summary>
        internal static string CursorHoverFreeSpace {
            get {
                return ResourceManager.GetString("CursorHoverFreeSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No directory pointed..
        /// </summary>
        internal static string CursorHoverNoDirectory {
            get {
                return ResourceManager.GetString("CursorHoverNoDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your cursor is over the part representing the non-calculable files..
        /// </summary>
        internal static string CursorHoverUnknownPart {
            get {
                return ResourceManager.GetString("CursorHoverUnknownPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HDGraph is deleting the folder....
        /// </summary>
        internal static string DeleteInProgress {
            get {
                return ResourceManager.GetString("DeleteInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder successfully deleted !.
        /// </summary>
        internal static string DeletionCompleteMsg {
            get {
                return ResourceManager.GetString("DeletionCompleteMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details view for folder &quot;{0}&quot;....
        /// </summary>
        internal static string DetailsForFolderFormTitle {
            get {
                return ResourceManager.GetString("DetailsForFolderFormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HDGraph Error.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while deleting the folder. Some files were not deleted. You probably don&apos;t have the right permissions on the folder or its files, or one file might be read only. {1}Error detail : {0}{1}{1}Do you want to open the folder to investigate the problem or delete the folder manually ?.
        /// </summary>
        internal static string ErrorDeletingFolder {
            get {
                return ResourceManager.GetString("ErrorDeletingFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error in the configuration file prevent the application to load the appropriate language. Please verify that the langage code is correct in your config file !.
        /// </summary>
        internal static string ErrorInConfigLanguage {
            get {
                return ResourceManager.GetString("ErrorInConfigLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language code error in config file.
        /// </summary>
        internal static string ErrorInConfigLanguageTitle {
            get {
                return ResourceManager.GetString("ErrorInConfigLanguageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} : Scan ERROR : {1}.
        /// </summary>
        internal static string ErrorLoading {
            get {
                return ResourceManager.GetString("ErrorLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error loading file {0}. Load action canceled. Error detail : .
        /// </summary>
        internal static string ErrorLoadingFile {
            get {
                return ResourceManager.GetString("ErrorLoadingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error : the non calculable files have a negative size. This means that you don&apos;t have refreshed the whole disk, or that your disk has one or more hard link or junction links (in this case, linked files are counted twice ou more)..
        /// </summary>
        internal static string ErrorNegativeSizeOfUnknownParts {
            get {
                return ResourceManager.GetString("ErrorNegativeSizeOfUnknownParts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Un error occured while checking version. Go to www.hdgraph.com to manually check for the latest version (your version is {0})..
        /// </summary>
        internal static string ErrorOccuredWhileCheckingVersion {
            get {
                return ResourceManager.GetString("ErrorOccuredWhileCheckingVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of HDGraph is still experimental. Please reports your feedback on the HDGraph forum (your feedback, good or bad, bug report or feature request, will be greatly appreciated). 
        ///
        ///Would you like to go to the HDGraph forum now ?.
        /// </summary>
        internal static string ExperimentalVersionGoToForum {
            get {
                return ResourceManager.GetString("ExperimentalVersionGoToForum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw space with HDGraph.
        /// </summary>
        internal static string ExplorerContextMenuAction {
            get {
                return ResourceManager.GetString("ExplorerContextMenuAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected folder is empty..
        /// </summary>
        internal static string FolderIsEmpty {
            get {
                return ResourceManager.GetString("FolderIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder is a reparse point (http://en.wikipedia.org/wiki/Reparse_point) : it is a junction point, an NTFS symbolic link or a volume mount point, which works as a shortcut to a folder located elsewhere. It has been excluded to prevent some sub folders or files to be counted twice..
        /// </summary>
        internal static string FolderOrFileIsReparsePoint {
            get {
                return ResourceManager.GetString("FolderOrFileIsReparsePoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Free space.
        /// </summary>
        internal static string FreeSpace {
            get {
                return ResourceManager.GetString("FreeSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your drive free space is about {0} ({1} bytes)..
        /// </summary>
        internal static string FreeSpaceDescription {
            get {
                return ResourceManager.GetString("FreeSpaceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action will permanently delete the folder &quot;{0}&quot; and all its content. Are you sure ?.
        /// </summary>
        internal static string GoingToDeleteFolderMsg {
            get {
                return ResourceManager.GetString("GoingToDeleteFolderMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your are about to delete a folder.
        /// </summary>
        internal static string GoingToDeleteFolderTitle {
            get {
                return ResourceManager.GetString("GoingToDeleteFolderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step by step instructions :
        ///1) Choose a directory to analyse on the top combo box.
        ///2) Press the &quot;Scan / Refresh&quot; button.
        ///3) Wait for the end of the analysis..
        /// </summary>
        internal static string GraphGuideLine {
            get {
                return ResourceManager.GetString("GraphGuideLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyze loaded. Disk snapshot date is {0}..
        /// </summary>
        internal static string GraphLoadedFromDate {
            get {
                return ResourceManager.GetString("GraphLoadedFromDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graph refresh completed !.
        /// </summary>
        internal static string GraphRefreshed {
            get {
                return ResourceManager.GetString("GraphRefreshed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HDG is currently NOT integrated in the explorer context menu. Nothing to do !.
        /// </summary>
        internal static string HdgAlreadyDesIntegratedInExplorer {
            get {
                return ResourceManager.GetString("HdgAlreadyDesIntegratedInExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HDG has already been integrated in the explorer. Nothing to do !.
        /// </summary>
        internal static string HdgAlreadyIntegratedInExplorer {
            get {
                return ResourceManager.GetString("HdgAlreadyIntegratedInExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HDG has been successfully removed from the explorer context menu..
        /// </summary>
        internal static string HdgCorrectlyDesIntegratedInExplorer {
            get {
                return ResourceManager.GetString("HdgCorrectlyDesIntegratedInExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integration successfull ! Try to right click on a folder....
        /// </summary>
        internal static string HdgCorrectlyIntegratedInExplorer {
            get {
                return ResourceManager.GetString("HdgCorrectlyIntegratedInExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HDG is a free tool allowing to graphically display the hard disk space usage. It shows all the directories and subdirectories of the hard drive on a single graph, allowing to see the the largest directories at a glance..
        /// </summary>
        internal static string HdgDescription {
            get {
                return ResourceManager.GetString("HdgDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HDG Graphics Files.
        /// </summary>
        internal static string HDGFiles {
            get {
                return ResourceManager.GetString("HDGFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This software is a computer program whose purpose is to draw
        ///multi-level pie charts of disk space, in order to easily identify
        ///the biggest folders of the hard disk.
        ///
        ///This software is governed by the CeCILL license under French law and
        ///abiding by the rules of distribution of free software.  You can  use,
        ///modify and/or redistribute the software under the terms of the CeCILL
        ///license as circulated by CEA, CNRS and INRIA at the following URL
        ///&quot;http://www.cecill.info&quot;.
        ///
        ///As a counterpart to the access to  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HdgLicenceDescription {
            get {
                return ResourceManager.GetString("HdgLicenceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;CeCILL v2&quot; License.
        /// </summary>
        internal static string HdgLicenceName {
            get {
                return ResourceManager.GetString("HdgLicenceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HDGraph-en.chm.
        /// </summary>
        internal static string HelpFilename {
            get {
                return ResourceManager.GetString("HelpFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path history list successfully cleared !.
        /// </summary>
        internal static string HistorySuccessfullyCleared {
            get {
                return ResourceManager.GetString("HistorySuccessfullyCleared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load file: it has been created with an incompatible version of HDGraph..
        /// </summary>
        internal static string IncompatibleVersionError {
            get {
                return ResourceManager.GetString("IncompatibleVersionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path is not valid. Please verify it ! Scan aborted..
        /// </summary>
        internal static string InvalidPathError {
            get {
                return ResourceManager.GetString("InvalidPathError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language setting has been modified. Until you restart the application, only new windows will use the correct settings..
        /// </summary>
        internal static string languageApplied {
            get {
                return ResourceManager.GetString("languageApplied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Langage setting modified !.
        /// </summary>
        internal static string languageAppliedTitle {
            get {
                return ResourceManager.GetString("languageAppliedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to none.
        /// </summary>
        internal static string languageId {
            get {
                return ResourceManager.GetString("languageId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading language list....
        /// </summary>
        internal static string loadingLanguageList {
            get {
                return ResourceManager.GetString("loadingLanguageList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1 element skipped due to scan error..
        /// </summary>
        internal static string OneElementSkipped {
            get {
                return ResourceManager.GetString("OneElementSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation failed.
        /// </summary>
        internal static string OperationFailedTitle {
            get {
                return ResourceManager.GetString("OperationFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation successfull.
        /// </summary>
        internal static string OperationSuccessfullTitle {
            get {
                return ResourceManager.GetString("OperationSuccessfullTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other draw engines are only available on Microsoft Windows. See www.hdgraph.com for details..
        /// </summary>
        internal static string OtherEnginesAvailableOnWindows {
            get {
                return ResourceManager.GetString("OtherEnginesAvailableOnWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose the directory to analyse :.
        /// </summary>
        internal static string PleaseChooseDirectory {
            get {
                return ResourceManager.GetString("PleaseChooseDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while drawing the graph....
        /// </summary>
        internal static string PleaseWaitWhileDrawing {
            get {
                return ResourceManager.GetString("PleaseWaitWhileDrawing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to released on {0}..
        /// </summary>
        internal static string ReleasedOn {
            get {
                return ResourceManager.GetString("ReleasedOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [ Resize preview ].
        /// </summary>
        internal static string ResizeInProgressByUser {
            get {
                return ResourceManager.GetString("ResizeInProgressByUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [ Rotation preview ].
        /// </summary>
        internal static string RotateInProgressByUser {
            get {
                return ResourceManager.GetString("RotateInProgressByUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan completed in {0}..
        /// </summary>
        internal static string ScanCompletedIn {
            get {
                return ResourceManager.GetString("ScanCompletedIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning .
        /// </summary>
        internal static string Scanning {
            get {
                return ResourceManager.GetString("Scanning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first HDGraph draw engine. Based on Bitmap generation. Slower and less powerfull than WPF engine (unless you have an old graphic card)..
        /// </summary>
        internal static string SimpleDrawEngineDescription {
            get {
                return ResourceManager.GetString("SimpleDrawEngineDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic.
        /// </summary>
        internal static string SimpleDrawEngineName {
            get {
                return ResourceManager.GetString("SimpleDrawEngineName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} elements skipped due to scan errors..
        /// </summary>
        internal static string SomeElementsSkipped {
            get {
                return ResourceManager.GetString("SomeElementsSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready..
        /// </summary>
        internal static string statusReady {
            get {
                return ResourceManager.GetString("statusReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0:N0} sub folder(s) listed..
        /// </summary>
        internal static string SubDirectoriesCount {
            get {
                return ResourceManager.GetString("SubDirectoriesCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can right click on any directory on the graph to have more options : open it in Windows Explorer, delete it, etc..
        /// </summary>
        internal static string Tip1_RightClick {
            get {
                return ResourceManager.GetString("Tip1_RightClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string Tip2_ {
            get {
                return ResourceManager.GetString("Tip2_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error prevent you to do the operation. Perhaps that you don&apos;t have rights to do this (try as administrator if you&apos;re not). Error detail : {0}..
        /// </summary>
        internal static string UnableToDesIntegrateInExplorer {
            get {
                return ResourceManager.GetString("UnableToDesIntegrateInExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error prevent you to do the operation. Perhaps that you don&apos;t have rights to do this (try as administrator if you&apos;re not). Error detail : {0}..
        /// </summary>
        internal static string UnableToIntegrateInExplorer {
            get {
                return ResourceManager.GetString("UnableToIntegrateInExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content of this folder has not been memorized during the HDGraph scan. Increase the &quot;Calculation max depth&quot; or browse this folder on the graph to be able to show its content..
        /// </summary>
        internal static string UnableToShowUnknownContent {
            get {
                return ResourceManager.GetString("UnableToShowUnknownContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error occured during scan. It has been logged. Please send the application log to the HDGraph team (contact: http://hdgraph.sourceforge.net). Thank you..
        /// </summary>
        internal static string UnexpectedErrorDuringAnalysis {
            get {
                return ResourceManager.GetString("UnexpectedErrorDuringAnalysis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string Unknown {
            get {
                return ResourceManager.GetString("Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown files.
        /// </summary>
        internal static string UnknownFiles {
            get {
                return ResourceManager.GetString("UnknownFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your drive contains about {0} ({1} bytes) of data that HDGraph is unable to scan.\nThis includes : \n   - unreadable files (due to access restrictions)\n   - lost space (due to cluster sizes)\n   - folders and files which path is greater than 255 chars\n   - etc..
        /// </summary>
        internal static string UnknownPartDescription {
            get {
                return ResourceManager.GetString("UnknownPartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory scan has been aborted by user. Please launch a new scan..
        /// </summary>
        internal static string UserCanceledAnalysis {
            get {
                return ResourceManager.GetString("UserCanceledAnalysis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your version is up to date (it&apos;s already the latest version available)..
        /// </summary>
        internal static string YourVersionIsUpToDate {
            get {
                return ResourceManager.GetString("YourVersionIsUpToDate", resourceCulture);
            }
        }
    }
}
